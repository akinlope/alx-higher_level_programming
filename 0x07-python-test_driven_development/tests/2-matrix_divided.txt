The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing [[1,2,3],[4,5,6]] by 2
    >>> matrix_divided([[1,2,3],[4,5,6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Dividing [[-9,5.5,-4.3],[-4,9,-6.0]] by 9
    >>> matrix_divided([[-9,5.5,-4.3],[-4,9,-6.0]], 9)
    [[-1.0, 0.61, -0.48], [-0.44, 1.0, -0.67]]

Dividing [[-9,5.5,-4.3],[-4,9,-6.0]] by 9
    >>> matrix_divided([[-9,5.5,-4.3],[-4,9,-6.0]], 9)
    [[-1.0, 0.61, -0.48], [-0.44, 1.0, -0.67]]

divide with 0
    >>> matrix_divided([[19,5.5,9.3],[-4,9,-6.0]], 0)
    Traceback (most recent call last):
            ...
    ZeroDivisionError: division by zero

check empty matrix
    >>> matrix_divided([], 8)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check empty list lists
    >>> matrix_divided([[],[]], 5)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

making matrix a boolean
    >>> matrix_divided(True, 5)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

making the list list a non int or float
    >>> matrix_divided([[None], [True]], 5)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

making the list list unequal size
    >>> matrix_divided([[1,3,4,5], [5,3,2]], 5)
    Traceback (most recent call last):
            ...
    TypeError: Each row of the matrix must have the same size

Check when div is not a type int or float
    >>> matrix_divided([[1,3,4], [5,3,2]], "ture")
    Traceback (most recent call last):
            ...
    TypeError: div must be a number

Check when div is not a type int or float (None)
    >>> matrix_divided([[1,3,4], [5,3,2]], None)
    Traceback (most recent call last):
            ...
    TypeError: div must be a number

Check when div is not a type int or float (Sring)
    >>> matrix_divided([[1,3,4], [5,3,2]], "NaN")
    Traceback (most recent call last):
            ...
    TypeError: div must be a number
