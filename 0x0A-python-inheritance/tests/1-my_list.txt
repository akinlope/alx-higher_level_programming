The ``1-my_list`` module
============================

Using ``my_list``
---------------------

Importing function from the module:
    >>> MyList = __import__('1-my_list').MyList

printing proper value
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list += [8]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5, 8]

printing multiple represented value
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list += [0]
    >>> my_list.print_sorted()
    [0, 1, 1, 2, 2, 4]

printing using '+=' sign
    >>> my_list = MyList()
    >>> my_list += [1]
    >>> my_list += [9]
    >>> my_list += [8]
    >>> my_list += [7]
    >>> my_list += [20]
    >>> my_list += [5]
    >>> my_list.print_sorted()
    [1, 5, 7, 8, 9, 20]

Printing an empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

MyList is an instance of the class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Instance has the correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

Printing with a negative number
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(-4)
    >>> my_list.append(2)
    >>> my_list.append(-1)
    >>> my_list.append(2)
    >>> my_list += [0]
    >>> my_list.print_sorted()
    [-4, -1, 0, 1, 2, 2]

Check printable string
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> print(my_list)
    [5]

Check if print_sorted() returns a new list
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 7]
    >>> my_list
    [7, 1, 2]
