The ``7-base_geometry`` module
============================

Using ``base_geometry``
---------------------

Importing function from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Testing when value is string
    >>> bg = BaseGeometry()
    >>> print(bg.integer_validator("my_int", "12"))
    Traceback (most recent call last):
            ...
    TypeError: my_int must be an integer

Testing when value is a list
    >>> bg = BaseGeometry()
    >>> print(bg.integer_validator("my_int", [12]))
    Traceback (most recent call last):
            ...
    TypeError: my_int must be an integer

Testing when value is not greater than 0
    >>> bg = BaseGeometry()
    >>> print(bg.integer_validator("age", 0))
    Traceback (most recent call last):
            ...
    ValueError: age must be greater than 0

Testing with a negative value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("distance", -4))
    Traceback (most recent call last):
            ...
    ValueError: distance must be greater than 0

Testing with a empty value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("distance"))
    Traceback (most recent call last):
            ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Testing for area
    >>> bg = BaseGeometry()
    >>> print (bg.area())
    Traceback (most recent call last):
            ...
    Exception: area() is not implemented

Testing with an intiger value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("distance", 1))
    None

Testing with tupple value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("age", (1,)))
    Traceback (most recent call last):
            ...
    TypeError: age must be an integer

Testing with boolean value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("age", True))
    None

Testing with None value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("age", None))
    Traceback (most recent call last):
            ...
    TypeError: age must be an integer

Testing with Dict value
    >>> bg = BaseGeometry()
    >>> print (bg.integer_validator("age", {2,5}))
    Traceback (most recent call last):
            ...
    TypeError: age must be an integer
